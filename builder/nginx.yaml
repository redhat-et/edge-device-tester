kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nginx-volume
  namespace: edt
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp2
  volumeMode: Filesystem
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid; # Changed from /var/run/nginx.pid
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       8080; # Changed from default 80 port
          server_name  _;
          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
              autoindex on;
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginxinc/nginx-unprivileged
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-vol
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      - name: aws-sync
        image: amazon/aws-cli
        command: [ "/bin/sh" ]
        args: [ "-c", "while true; do aws s3 sync s3://cdn.redhat.edge-lab.net/ /s3-bucket; sleep 60;done" ]
        volumeMounts:
        - mountPath: /s3-bucket
          name: nginx-vol
        - mountPath: /.aws
          name: aws-creds
      volumes:
      - name: nginx-vol
        persistentVolumeClaim:
          claimName: nginx-volume
      - name: aws-creds
        secret:
          secretName: aws-creds
      - name: nginx-config
        configMap:
          name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: edt
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nginx
  namespace: edt
spec:
  host: nginx-edt.apps.edge-lab.aws.octo.edge-sites.net
  to:
    kind: Service
    name: nginx-svc
    weight: 100
  port:
    targetPort: 8080
  wildcardPolicy: None
