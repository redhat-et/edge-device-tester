apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-release
  namespace: edt
spec:
  workspaces:
  - name: workspace
  - name: secrets
  - name: aws-creds
  params:
  - name: url
    type: string
    description: 'URL of the git repo containing the ostree compose configs'
  - name: revision
    type: string
    description: 'git revision to checkout (branch, tag, sha, refâ€¦)'
    default: 'main'
  - name: cores
    description: 'cores'
    type: string
  - name: memory
    description: 'memory'
    type: string
  - name: diskimage
    description: 'containerDisk name or URL to import into dataVolume'
    type: string
  - name: storagesize
    description: 'size of data volume (if importing dataVolume from URL)'
    type: string
  - name: storageclass
    description: 'storage class of data volume (if importing dataVolume from URL)'
    type: string
  - name: s3-bucket
    description: 'S3 bucket to upload to'
    type: string
  - name: s3-prefix
    description: 'prefix (path) for S3 keys to use'
    type: string
  - name: verbose
    description: 'log the commands used during execution'
    type: string
    default: 'false'
  tasks:
  - name: fetch-configs
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
    - name: url
      value: $(params.url)
    - name: revision
      value: $(params.revision)
    - name: verbose
      value: $(params.verbose)
    workspaces:
    - name: output
      workspace: workspace
  - name: deploy-vm
    taskRef:
      name: kubevirt-deploy-vm
      kind: Task
    params:
    - name: name
      value: $(context.pipelineRun.name)
    - name: cores
      value: $(params.cores)
    - name: memory
      value: $(params.memory)
    - name: diskimage
      value: $(params.diskimage)
    - name: storagesize
      value: $(params.storagesize)
    - name: storageclass
      value: $(params.storageclass)
    - name: verbose
      value: $(params.verbose)
    runAfter:
    - fetch-configs
    workspaces:
    - name: secrets
      workspace: secrets
  - name: build-image
    taskRef:
      name: run-image-builder
      kind: Task
    params:
    - name: ip
      value: "$(tasks.deploy-vm.results.ip)"
    - name: user
      value: 'redhat'
    - name: verbose
      value: $(params.verbose)
    runAfter:
    - deploy-vm
    workspaces:
    - name: output
      workspace: workspace
    - name: secrets
      workspace: secrets
  - name: s3-upload
    taskRef:
      name: s3-upload
      kind: Task
    params:
    - name: ip
      value: "$(tasks.deploy-vm.results.ip)"
    - name: user
      value: 'redhat'
    - name: s3-bucket
      value: $(params.s3-bucket)
    - name: s3-prefix
      value: $(params.s3-prefix)
    - name: verbose
      value: $(params.verbose)
    runAfter:
    - build-image
    workspaces:
    - name: output
      workspace: workspace
    - name: secrets
      workspace: secrets
    - name: aws-creds
      workspace: aws-creds
