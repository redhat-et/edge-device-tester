apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: waitfor-cluster-up
  namespace: edt
spec:
  description: >-
    This task waits for a cluster inside a VM to become available.

  params:
  - name: ip
    description: 'IP to connect to'
    type: string
  - name: port
    description: 'port to connect to'
    type: string
    default: '22'
  - name: user
    description: 'user to connect as'
    type: string
    default: 'redhat'
  - name: variant
    description: 'uShift variant to test'
    type: string
  - name: verbose
    description: 'log the commands used during execution'
    type: string
    default: 'false'

  steps:
  - name: waitfor-cluster-up
    image: 'nettools:latest'
    script: |
      #!/usr/bin/env bash

      set -eu -o pipefail

      if [[ "$(params.verbose)" == "true" ]] ; then
        set -x
      fi

      SSH_OPTIONS="-i /tekton/home/ssh-key-pair/ssh-privatekey -o StrictHostKeyChecking=no"
      SSH="ssh ${SSH_OPTIONS} -p $(params.port) $(params.user)@$(params.ip)"

      DATE_FMT="+%Y-%m-%d %H:%M:%S.%6N"

      TEST_CMD="/var/opt/ushift/bin/o3s kubectl get pods -A 2>&1"

      case "$(params.variant)" in
        "o3s")
          START_TIME=${SECONDS}
          while true; do
            RC=0
            OUTPUT=$(${SSH} ${TEST_CMD}) || RC=$?

            echo "$(date "${DATE_FMT}")  Waiting for cluster to come up ($((${SECONDS} - ${START_TIME}))s): [ret=${RC}]"
            echo "${OUTPUT}"

            if [ $RC -eq 0 ]; then
              FAILED_PODS=$(echo \"${OUTPUT}\" | awk '{print $3}' | egrep -v -- "STATUS|Running|Complete")
              if [ "${FAILED_PODS}" == "" ]; then
                break
              fi
            fi

            sleep 5
          done
          ;;
        *)
          sleep 600
          ;;
      esac

      echo "$(date "${DATE_FMT}") Cluster is up ($((${SECONDS} - ${START_TIME}))s)."

  workspaces:
  - name: ssh-keys
    mountPath: /tekton/home/ssh-key-pair
    description: Secret volume containing SSH key pair for VM
