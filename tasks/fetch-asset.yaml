apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: fetch-asset
  namespace: edt
spec:
  description: >-
    This task downloads an asset from a given URL, optionally checks its
    integrity based on a SHA256 checksum, and optionally uncompresses it.
  params:
  - name: url
    description: URL of asset to fetch
    type: string
  - name: sha256_checksum
    description: SHA256 checksum to verify asset download (if empty, don't verify)
    type: string
    default: ""
  - name: uncompress
    description: uncompress asset (if compressed)
    type: string
    default: "false"
  - name: verbose
    description: 'log the commands used during execution'
    type: string
    default: 'false'
  results:
    - name: filename
      description: file name of asset in workspace
  steps:
  - name: fetch-asset
    image: 'compressors:latest'
    script: |
      #!/usr/bin/env bash

      set -eu -o pipefail

      if [[ "$(params.verbose)" == "true" ]] ; then
        set -x
      fi

      FILENAME="$(params.url)"
      FILENAME="${FILENAME%%\?*}"
      FILENAME="$(basename ${FILENAME})"
      curl --location --fail --output "${FILENAME}" "$(params.url)"
      if [ $? -ne 0 ]; then
        exit 1
      fi

      if [ ! -z "$(params.sha256_checksum)" ]; then
        SHA256=$(sha256sum "${FILENAME}" | cut -d' ' -f1)
        echo "SHA256 of downloaded file: ${SHA256}"
        echo "SHA256 expected: $(params.sha256_checksum)"
        test [ "${SHA256}" != "$(params.sha256_checksum)" ] && exit 1
      fi

      if [ "$(params.uncompress)" == "true" ]; then
        if [ "${FILENAME}" == *.xz ]; then
          xz --decompress "${FILENAME}"
          FILENAME=${FILENAME%.xz}
        fi
        if [ "${FILENAME}" == *.gz ]; then
          gunzip "${FILENAME}"
          FILENAME=${FILENAME%.gz}
        fi
        if [ "${FILENAME}" == *.bz2 ]; then
          bzip2 --decompress "${FILENAME}"
          FILENAME=${FILENAME%.bz2}
        fi
      fi

      echo -n "${FILENAME}" | tee $(results.filename.path)
    workingDir: $(workspaces.output.path)
  workspaces:
  - name: output
    description: The asset will be downloaded into the volume backing this workspace
